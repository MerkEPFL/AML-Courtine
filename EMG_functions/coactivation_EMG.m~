function [coactivation] = coactivation_EMG(onset,offset,gait)


fields = fieldnames(onset);
for i = 1:numel(fields)   
    if ~isnan(onset.(fields{i}).EMG.LMG) &&  ~isnan(onset.(fields{i}).EMG.LTA)
        
        index_LMG = [];
        for j = 1:length(onset.(fields{i}).EMG.LMG)
            index_LMG = [index_LMG,onset.(fields{i}).EMG.LMG(j): ... 
            offset.(fields{i}).EMG.LMG(j)];
        end
        
        index_LTA = [];
        for j = 1:length(onset.(fields{i}).EMG.LTA)
            index_LTA = [index_LTA,onset.(fields{i}).EMG.LTA(j): ... 
            offset.(fields{i}).EMG.LTA(j)];
        end
        
        coactivation.(fields{i}).EMG.Left = sum(ismember(index_LMG,index_LTA))/length(gait.(fields{i}).EMG.LMG);

    else
        coactivation.(fields{i}).EMG.Left = NaN;
    end
    
        
    if ~isnan(onset.(fields{i}).EMG.RMG) &&  ~isnan(onset.(fields{i}).EMG.RTA)
        
        index_RMG = [];
        for j = 1:length(onset.(fields{i}).EMG.RMG)
            index_RMG = [index_RMG,onset.(fields{i}).EMG.RMG(j): ... 
            offset.(fields{i}).EMG.RMG(j)];
        end
        
        index_RTA = [];
        for j = 1:length(onset.(fields{i}).EMG.RTA)
            index_RTA = [index_RTA,onset.(fields{i}).EMG.RTA(j): ... 
            offset.(fields{i}).EMG.RTA(j)];
        end  
        
        coactivation.(fields{i}).EMG.Right = sum(ismember(onset.(fields{i}).EMG.RMG(1): ... 
            offset.(fields{i}).EMG.RMG(1), onset.(fields{i}).EMG.RTA(1): ... 
            offset.(fields{i}).EMG.RTA(1)))/length(gait.(fields{i}).EMG.RMG);
    else
        coactivation.(fields{i}).EMG.Right = NaN;
    end   
end

end

